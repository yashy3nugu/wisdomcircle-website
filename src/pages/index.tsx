import { type NextPage } from "next";
import Head from "next/head";
import { Form, Formik } from "formik";
import FormInput from "@/components/ui/form-input";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/router";

import { api } from "@/utils/api";
import PasswordInput from "@/components/ui/password-input";
import Link from "next/link";

const Home: NextPage = () => {
  const context = api.useContext();
  const router = useRouter();

  const { mutate, isLoading } = api.auth.login.useMutation({
    onSuccess(data) {
      context.auth.user.setData(undefined, data);
    },
    // onError(error) {

    // },
    async onSettled(data) {
      if (data) {
        const redirect = (router.query.redirect as string) || "/app";
        await router.replace(redirect);
      }
    },
  });

  return (
    <>
      <p className="text-lg font-bold lg:text-2xl">Sign in to WisdomCircle</p>
      <p className="mt-1 text-brandgray">
        Don&apos;t have an account?{" "}
        <Link href="/register" className="font-semibold text-link">
          Sign Up
        </Link>
      </p>
      <Formik
        onSubmit={(values, actions) => {
          const { email, password } = values;
          mutate({
            email,
            password,
          });

          actions.resetForm();
        }}
        initialValues={{ email: "", password: "" }}
      >
        <Form className="mt-7 w-full">
          <FormInput
            name="email"
            type="email"
            placeholder="Email or Mobile Number"
          />
          <PasswordInput
            name="password"
            type="password"
            placeholder="Password"
          />
          <div className="flex justify-end">
            <Link
              href="/forgotpassword"
              className="text-sm font-semibold text-link"
            >
              Forgot password?
            </Link>
          </div>
          <Button className="mt-6 w-full">Sign In</Button>
        </Form>
      </Formik>

      {/* <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        
      </main> */}
    </>
  );
};

export default Home;
